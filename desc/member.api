import "base.api"

type (
    // The response data of member information | 会员信息
    MemberInfo {
        BaseUUIDInfo

        // Status | 状态
        Status  uint32 `json:"status,optional"`

        // Username | 用户名
        Username  string `json:"username,optional"`

        // Password | 密码
        Password  string `json:"password,optional"`

        // Nickname | 昵称
        Nickname  string `json:"nickname,optional"`

        // RankId | 等级ID
        RankId  uint64 `json:"rankId,optional"`

        // Mobile | 手机
        Mobile  string `json:"mobile,optional"`

        // Email | 邮箱
        Email  string `json:"email,optional"`

        // Avatar | 头像地址
        Avatar  string `json:"avatar,optional"`
    }

    // The response data of member list | 会员列表数据
    MemberListResp {
        BaseDataInfo

        // Member list data | 会员列表数据
        Data MemberListInfo `json:"data"`
    }

    // Member list data | 会员列表数据
    MemberListInfo {
        BaseListInfo

        // The API list data | 会员列表数据
        Data  []MemberInfo  `json:"data"`
    }

    // Get member list request params | 会员列表请求参数
    MemberListReq {
        PageInfo

       // Username | 用户名
       Username  string `json:"username,optional"`

       // Nickname | 昵称
       Nickname  string `json:"nickname,optional"`

       // Mobile | 手机
       Mobile  string `json:"mobile,optional"`

       // Email | 邮箱
       Email  string `json:"email,optional"`

       // Rank ID | 等级ID
       RankId  uint64 `json:"rankId,optional"`
    }

    // Member information response | 会员信息返回体
    MemberInfoResp {
        BaseDataInfo

        // Member information | 会员数据
        Data MemberInfo `json:"data"`
    }
)

@server(
    jwt: Auth
    group: member
    middleware: Authority
)

service Mms {
    // Create member information | 创建会员
    @handler createMember
    post /member/create (MemberInfo) returns (BaseMsgResp)

    // Update member information | 更新会员
    @handler updateMember
    post /member/update (MemberInfo) returns (BaseMsgResp)

    // Delete member information | 删除会员信息
    @handler deleteMember
    post /member/delete (UUIDsReq) returns (BaseMsgResp)

    // Get member list | 获取会员列表
    @handler getMemberList
    post /member/list (MemberListReq) returns (MemberListResp)

    // Get member by ID | 通过ID获取会员
    @handler getMemberById
    post /member (UUIDReq) returns (MemberInfoResp)
}
