import "../base.api"

type (
    // The response data of member information | 会员信息
    MemberInfo {
        BaseUUIDInfo

        // Status | 状态
        Status  *uint32 `json:"status,optional"`

        // Username | 用户名
        Username  *string `json:"username,optional"`

        // Password | 密码
        Password  *string `json:"password,optional"`

        // Nickname | 昵称
        Nickname  *string `json:"nickname,optional"`

        // RankId | 等级ID
        RankId  *uint64 `json:"rankId,optional"`

        // Mobile | 手机
        Mobile  *string `json:"mobile,optional"`

        // Email | 邮箱
        Email  *string `json:"email,optional"`

        // Avatar | 头像地址
        Avatar  *string `json:"avatar,optional"`
    }

    // The response data of member list | 会员列表数据
    MemberListResp {
        BaseDataInfo

        // Member list data | 会员列表数据
        Data MemberListInfo `json:"data"`
    }

    // Member list data | 会员列表数据
    MemberListInfo {
        BaseListInfo

        // The API list data | 会员列表数据
        Data  []MemberInfo  `json:"data"`
    }

    // Get member list request params | 会员列表请求参数
    MemberListReq {
        PageInfo

       // Username | 用户名
       Username  *string `json:"username,optional"`

       // Nickname | 昵称
       Nickname  *string `json:"nickname,optional"`

       // Mobile | 手机
       Mobile  *string `json:"mobile,optional"`

       // Email | 邮箱
       Email  *string `json:"email,optional"`

       // Rank ID | 等级ID
       RankId  *uint64 `json:"rankId,optional"`
    }

    // Member information response | 会员信息返回体
    MemberInfoResp {
        BaseDataInfo

        // Member information | 会员数据
        Data MemberInfo `json:"data"`
    }

    // register request | 注册参数
    RegisterReq {
        // User Name | 用户名
        Username  string `json:"username" validate:"required,alphanum,max=20"`

        // Password | 密码
        Password  string `json:"password" validate:"required,max=30,min=6"`

        // Captcha ID which store in redis | 验证码编号, 存在redis中
        CaptchaId string `json:"captchaId" validate:"required,len=20"`

        // The Captcha which users input | 用户输入的验证码
        Captcha   string `json:"captcha" validate:"required,len=5"`

        // The user's email address | 用户的邮箱
        Email     string `json:"email" validate:"required,email,max=100"`
    }

    // Login request | 登录参数
    LoginReq {
        // User Name | 用户名
        Username   string `json:"username" validate:"required,alphanum,max=20"`

        // Password | 密码
        Password   string `json:"password" validate:"required,max=30,min=6"`

        // Captcha ID which store in redis | 验证码编号, 存在redis中
        CaptchaId  string `json:"captchaId,optional"  validate:"omitempty,len=20"`

        // The Captcha which users input | 用户输入的验证码
        Captcha    string `json:"captcha,optional" validate:"omitempty,len=5"`
    }

    // The log in response data | 登录返回数据
    LoginResp {
        BaseDataInfo

        // The log in information | 登陆返回的数据信息
        Data LoginInfo `json:"data"`
    }

    // The log in information | 登陆返回的数据信息
    LoginInfo {
        // User's UUID | 用户的UUID
        UserId       string          `json:"userId"`

        // Rank ID | 等级 ID
        RankId       uint64          `json:"rankId"`

        // Token for authorization | 验证身份的token
        Token        string          `json:"token"`

        // Expire timestamp | 过期时间戳
        Expire       uint64          `json:"expire"`

        // Avatar | 用户头像
        Avatar      string          `json:"avatar"`

        // Nickname | 用户昵称
        Nickname    string          `json:"nickname"`

        // RankName | 等级名称
        RankName    string          `json:"rankName"`
    }

    // The modify info | 个人信息修改请求
    ModifyProfileReq {
        // Nickname | 昵称
        Nickname  *string `json:"nickname,optional"`

        // Mobile | 手机
        Mobile  *string `json:"mobile,optional"`

        // Email | 邮箱
        Email  *string `json:"email,optional"`

        // Avatar | 头像地址
        Avatar  *string `json:"avatar,optional"`
    }
)

@server(
    jwt: Auth
    group: member
    middleware: Authority
)

service Mms {
    // Create member information | 创建会员
    @handler createMember
    post /member/create (MemberInfo) returns (BaseMsgResp)

    // Update member information | 更新会员
    @handler updateMember
    post /member/update (MemberInfo) returns (BaseMsgResp)

    // Delete member information | 删除会员信息
    @handler deleteMember
    post /member/delete (UUIDsReq) returns (BaseMsgResp)

    // Get member list | 获取会员列表
    @handler getMemberList
    post /member/list (MemberListReq) returns (MemberListResp)

    // Get member by ID | 通过ID获取会员
    @handler getMemberById
    post /member (UUIDReq) returns (MemberInfoResp)
}

@server(
    jwt: Auth
    group: member
)

service Mms {
    // Modify users' own profile | 用户修改信息接口
    @handler modifyProfile
    post /member/profile (ModifyProfileReq) returns (BaseMsgResp)
}

@server(
    group: member
)

service Mms {
    // Log in | 登录
    @handler login
    post /member/login (LoginReq) returns (LoginResp)

    // Register | 注册
    @handler register
    post /member/register (RegisterReq) returns (BaseMsgResp)
}