// Code generated by goctl. DO NOT EDIT.
package types

// The basic response with data | 基础带数据信息
// swagger:model BaseDataInfo
type BaseDataInfo struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response with data | 基础带数据信息
// swagger:model BaseListInfo
type BaseListInfo struct {
	// The total number of data | 数据总数
	Total uint64 `json:"total"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response without data | 基础不带数据信息
// swagger:model BaseMsgResp
type BaseMsgResp struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
}

// The simplest message | 最简单的信息
// swagger:response SimpleMsg
type SimpleMsg struct {
	// Message | 信息
	Msg string `json:"msg"`
}

// The page request parameters | 列表请求参数
// swagger:model PageInfo
type PageInfo struct {
	// Page number | 第几页
	// Required: true
	Page uint64 `json:"page" validate:"number"`
	// Page size | 单页数据行数
	// Required: true
	// Maximum: 100000
	PageSize uint64 `json:"pageSize" validate:"number,max=100000"`
}

// Basic ID request | 基础ID参数请求
// swagger:model IDReq
type IDReq struct {
	// ID
	// Required: true
	Id uint64 `json:"id" validate:"number"`
}

// Basic IDs request | 基础ID数组参数请求
// swagger:model IDsReq
type IDsReq struct {
	// IDs
	// Required: true
	Ids []uint64 `json:"ids"`
}

// Basic ID request | 基础ID地址参数请求
// swagger:model IDPathReq
type IDPathReq struct {
	// ID
	// Required: true
	Id uint64 `path:"id"`
}

// Basic UUID request | 基础UUID参数请求
// swagger:model UUIDReq
type UUIDReq struct {
	// ID
	// Required: true
	// Max length: 36
	Id string `json:"id" validate:"len=36"`
}

// Basic UUID array request | 基础UUID数组参数请求
// swagger:model UUIDsReq
type UUIDsReq struct {
	// Ids
	// Required: true
	Ids []string `json:"ids"`
}

// The base response data | 基础信息
// swagger:model BaseInfo
type BaseInfo struct {
	// ID
	Id uint64 `json:"id"`
	// Create date | 创建日期
	CreatedAt int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt int64 `json:"updatedAt,optional"`
}

// The base UUID response data | 基础信息
// swagger:model BaseUUIDInfo
type BaseUUIDInfo struct {
	// ID
	Id string `json:"id"`
	// Create date | 创建日期
	CreatedAt int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt int64 `json:"updatedAt,optional"`
}

// The response data of member information | 会员信息
// swagger:model MemberInfo
type MemberInfo struct {
	BaseUUIDInfo
	// Status | 状态
	Status uint32 `json:"status,optional"`
	// Username | 用户名
	Username string `json:"username,optional"`
	// Password | 密码
	Password string `json:"password,optional"`
	// Nickname | 昵称
	Nickname string `json:"nickname,optional"`
	// RankId | 等级ID
	RankId uint64 `json:"rankId,optional"`
	// Mobile | 手机
	Mobile string `json:"mobile,optional"`
	// Email | 邮箱
	Email string `json:"email,optional"`
	// Avatar | 头像地址
	Avatar string `json:"avatar,optional"`
}

// The response data of member list | 会员列表数据
// swagger:model MemberListResp
type MemberListResp struct {
	BaseDataInfo
	// Member list data | 会员列表数据
	Data MemberListInfo `json:"data"`
}

// Member list data | 会员列表数据
// swagger:model MemberListInfo
type MemberListInfo struct {
	BaseListInfo
	// The API list data | 会员列表数据
	Data []MemberInfo `json:"data"`
}

// Get member list request params | 会员列表请求参数
// swagger:model MemberListReq
type MemberListReq struct {
	PageInfo
	// Username | 用户名
	Username string `json:"username,optional"`
	// Nickname | 昵称
	Nickname string `json:"nickname,optional"`
	// Mobile | 手机
	Mobile string `json:"mobile,optional"`
	// Email | 邮箱
	Email string `json:"email,optional"`
	// Rank ID | 等级ID
	RankId uint64 `json:"rankId,optional"`
}

// Member information response | 会员信息返回体
// swagger:model MemberInfoResp
type MemberInfoResp struct {
	BaseDataInfo
	// Member information | 会员数据
	Data MemberInfo `json:"data"`
}

// The response data of member rank information | MemberRank信息
// swagger:model MemberRankInfo
type MemberRankInfo struct {
	BaseInfo
	// Translated Name | 国际化翻译
	Trans string `json:"trans,optional"`
	// Rank name | 等级名称
	Name string `json:"name,optional"`
	// Description | 等级描述
	Description string `json:"description,optional"`
	// Remark | 备注
	Remark string `json:"remark,optional"`
	// Rank Code | 等级代码
	Code string `json:"code,optional"`
}

// The response data of member rank list | MemberRank列表数据
// swagger:model MemberRankListResp
type MemberRankListResp struct {
	BaseDataInfo
	// MemberRank list data | MemberRank列表数据
	Data MemberRankListInfo `json:"data"`
}

// MemberRank list data | MemberRank列表数据
// swagger:model MemberRankListInfo
type MemberRankListInfo struct {
	BaseListInfo
	// The API list data | MemberRank列表数据
	Data []MemberRankInfo `json:"data"`
}

// Get member rank list request params | MemberRank列表请求参数
// swagger:model MemberRankListReq
type MemberRankListReq struct {
	PageInfo
	// Name | 等级名称
	Name string `json:"name,optional"`
	// Description | 描述
	Description string `json:"description,optional"`
	// Remark | 备注
	Remark string `json:"remark,optional"`
}

// MemberRank information response | MemberRank信息返回体
// swagger:model MemberRankInfoResp
type MemberRankInfoResp struct {
	BaseDataInfo
	// MemberRank information | MemberRank数据
	Data MemberRankInfo `json:"data"`
}
